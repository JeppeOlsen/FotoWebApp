@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Authorization @* For Authorization *@
@using Microsoft.AspNetCore.Identity
@using FotoWebApp.Data.Models
@using FotoWebApp.Data


<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />

<MudLayout>
    @if (ShowLayout)
    {
        <MudAppBar Elevation="1">
            <MudText Typo="Typo.h5" Class="ml-3">Grain</MudText>
            <AuthorizeView>
                <MudSpacer />
                <MudText Class="me-6" Typo="Typo.subtitle1">@context.User.Identity.Name</MudText>
                <MudLink Href="@("account/manage")" Underline="Underline.None">
                    <MudAvatar Color="Color.Primary">
                        @GetInitial(context.User.Identity.Name)
                    </MudAvatar>
                </MudLink>
                
            </AuthorizeView>
        </MudAppBar>
        <MudDrawer @bind-Open="@_open" Variant="DrawerVariant.Mini" ClipMode="DrawerClipMode.Docked" OpenMiniOnHover="true" Elevation="2">
            <NavMenu />
        </MudDrawer>
    }
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code
{
    #region Logic for login navigation
    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    // Add routes here if they should not contain appbar and side menu
    private readonly List<string> ExcludedRoutes = new()
    {
    "/Account/Login",
    "/Account/ForgotPassword",
    "/Account/Register",
    "/Account/ResendEmailConfirmation",
    "/error",
    "/ChooseImages"
    };

    // ShowLayout is set to true unless the current URL matches any route in ExcludedRoutes List.
    private bool ShowLayout => !ExcludedRoutes.Any(route => NavigationManager.Uri.Contains(route));

    #endregion
    
    #region Open and close drawer

    private bool _open = true;
    private MudTheme _theme = new();
    private bool _isDarkMode = true;

    private void ToggleDrawer()
    {
        _open = !_open;
    }

    #endregion

    #region
    private string GetInitial(string userName)
    {
        if (!string.IsNullOrWhiteSpace(userName))
        {
            return userName.Trim()[0].ToString().ToUpper();
        } 
        return "X"; 
    }
    #endregion

    private void AvatarOnClick()
    {
        NavigationManager.NavigateTo("Account/Manage");
    }
}





